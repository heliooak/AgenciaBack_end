// <auto-generated />
using AgenciaExplorer.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgenciaExplorer.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220108191010_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AgenciaExplorer.Models.CadastrarCidade", b =>
                {
                    b.Property<int>("Id_Cidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Cidade"), 1L, 1);

                    b.Property<string>("Moeda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome_Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Cidade");

                    b.ToTable("cadastrarCidades");
                });

            modelBuilder.Entity("AgenciaExplorer.Models.CadastrarOferta", b =>
                {
                    b.Property<int>("Id_Oferta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Oferta"), 1L, 1);

                    b.Property<string>("Nome_Carro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Preco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Oferta");

                    b.ToTable("cadastrarOfertas");
                });

            modelBuilder.Entity("AgenciaExplorer.Models.Comprar", b =>
                {
                    b.Property<int>("Id_Compra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Compra"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Cidade")
                        .HasColumnType("int");

                    b.HasKey("Id_Compra");

                    b.HasIndex("Id_Cidade");

                    b.ToTable("compras");
                });

            modelBuilder.Entity("AgenciaExplorer.Models.Contato", b =>
                {
                    b.Property<int>("Id_Contato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Contato"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Contato");

                    b.ToTable("contatos");
                });

            modelBuilder.Entity("AgenciaExplorer.Models.Comprar", b =>
                {
                    b.HasOne("AgenciaExplorer.Models.CadastrarCidade", "CadastrarCidade")
                        .WithMany("Comprar")
                        .HasForeignKey("Id_Cidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CadastrarCidade");
                });

            modelBuilder.Entity("AgenciaExplorer.Models.CadastrarCidade", b =>
                {
                    b.Navigation("Comprar");
                });
#pragma warning restore 612, 618
        }
    }
}
